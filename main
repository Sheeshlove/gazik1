import React, { useState } from 'react';

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏
const TEXTS = {
  ru: {
    title: "üéì –ü–æ–¥—Ö–æ–¥–∏—Ç –ª–∏ —Ç–µ–±–µ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–∞—è –º–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä–∞?",
    subtitle: "–û—Ç–≤–µ—Ç—å –Ω–∞ 10 –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ —É–∑–Ω–∞–π —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å üìä",
    instruction: "–û—Ü–µ–Ω–∏ –∫–∞–∂–¥–æ–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ —à–∫–∞–ª–µ –æ—Ç 1 –¥–æ 5 ‚≠ê",
    scaleLabels: {
      1: "üòê –°–æ–≤—Å–µ–º –Ω–µ –ø—Ä–æ –º–µ–Ω—è",
      5: "üî• –≠—Ç–æ –ø—Ä—è–º —è"
    },
    nextButton: "–°–ª–µ–¥—É—é—â–∏–π ‚û°Ô∏è",
    finishButton: "üéØ –£–∑–Ω–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç",
    backButton: "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
    restartButton: "üîÑ –ü—Ä–æ–π—Ç–∏ —Å–Ω–æ–≤–∞",
    questions: [
      "üíº –•–æ—á—É —É–∂–µ –≤–æ –≤—Ä–µ–º—è —É—á—ë–±—ã –ø–æ–ª—É—á–∏—Ç—å –æ—Ñ—Ñ–µ—Ä",
      "üöÄ –ì–æ—Ç–æ–≤(–∞) —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞–¥ —Ä–µ–∞–ª—å–Ω—ã–º–∏ –∫–µ–π—Å–∞–º–∏ –±–∏–∑–Ω–µ—Å–∞, –∞ –Ω–µ —Ç–æ–ª—å–∫–æ –ø–∏—Å–∞—Ç—å —Ç–µ–æ—Ä–∏—é",
      "üèÜ –•–æ—á—É –ø–æ–ª—É—á–∏—Ç—å –¥–∏–ø–ª–æ–º –¢–û–ü-5 –≤—É–∑–∞ –†–æ—Å—Å–∏–∏",
      "‚öñÔ∏è –ì–æ—Ç–æ–≤(–∞) —Å–æ–≤–º–µ—â–∞—Ç—å —Ä–∞–±–æ—Ç—É –∏ —É—á—ë–±—É",
      "ü§ù –ì–æ—Ç–æ–≤(–∞) –±—Ä–∞—Ç—å –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ –∫–æ–º–∞–Ω–¥–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã, –∞ –Ω–µ —Ç–æ–ª—å–∫–æ –∑–∞ —Å–≤–æ—é —á–∞—Å—Ç—å —Ä–∞–±–æ—Ç—ã",
      "üë®‚Äçüíº –•–æ—á—É –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–æ–≤ –∏–∑ –∏–Ω–¥—É—Å—Ç—Ä–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –¥–∞–≤–∞—Ç—å –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –ø–æ –ø—Ä–æ–µ–∫—Ç–∞–º",
      "üí∞ –°—Ç–∏–ø–µ–Ω–¥–∏—è –¥–ª—è –ª—É—á—à–∏—Ö ‚Äî —Å–∏–ª—å–Ω—ã–π —Å—Ç–∏–º—É–ª –¥–ª—è –º–µ–Ω—è –≤—ã–∫–ª–∞–¥—ã–≤–∞—Ç—å—Å—è",
      "üåü –ú–Ω–µ –≤–∞–∂–Ω–æ –ø–æ–ø–∞—Å—Ç—å –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ —Å–∏–ª—å–Ω—ã—Ö —Ä–µ–±—è—Ç (–Ω–µ—Ç–≤–æ—Ä–∫–∏–Ω–≥, –ø—Ä–æ–µ–∫—Ç—ã, –∫–∞—Ä—å–µ—Ä–Ω—ã–µ —Ç—Ä–µ–∫–∏)",
      "‚è∞ –ì–æ—Ç–æ–≤(–∞) –∫ –ø–ª–æ—Ç–Ω–æ–π –ø—Ä–æ–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç–µ –∏ –¥–µ–¥–ª–∞–π–Ω–∞–º (–∞ –Ω–µ ¬´–ø–∞—Ä–∞ –∑–∞—á—ë—Ç–æ–≤ –≤ —Å–µ–º–µ—Å—Ç—Ä¬ª)",
      "üéØ –ü–æ–Ω–∏–º–∞—é, –∫—É–¥–∞ —Ö–æ—á—É –ø—Ä–∏–π—Ç–∏ —á–µ—Ä–µ–∑ 1‚Äì2 –≥–æ–¥–∞ (—Ä–æ–ª—å/—Ñ—É–Ω–∫—Ü–∏—è), –∏ –Ω—É–∂–µ–Ω –±—É—Å—Ç"
    ],
    results: {
      A: {
        title: "üöÄ –ü—Ä–æ—Ñ–∏–ª—å A: ¬´–ì–æ—É –Ω–∞ –º–∞–∫—Å–∏–º—É–º¬ª",
        description: "üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –§–æ—Ä–º–∞—Ç –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–π –º–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä—ã –≤–∞–º –æ—Ç–ª–∏—á–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç. –ì–æ—Ç–æ–≤—å—Ç–µ—Å—å –∫ –ø—Ä–æ–µ–∫—Ç–∞–º, –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞–º –∏ –ø–µ—Ä–≤—ã–º –æ—Ñ—Ñ–µ—Ä–∞–º! üí™",
        range: "40-50 –±–∞–ª–ª–æ–≤"
      },
      B: {
        title: "ü§î –ü—Ä–æ—Ñ–∏–ª—å B: ¬´–•–æ—á—É, –Ω–æ –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã¬ª",
        description: "üëç –£ –≤–∞—Å —Ö–æ—Ä–æ—à–∏–µ —à–∞–Ω—Å—ã ‚Äî –Ω–æ –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã. –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π, —Å–ø—Ä–æ—Å–∏—Ç–µ, —á—Ç–æ –≤–∞—Å —Å–º—É—â–∞–µ—Ç - –ø–æ–ø—Ä–æ–±—É–µ–º –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å –∏ —Ä–∞–∑–≤–µ—è—Ç—å —Å–æ–º–Ω–µ–Ω–∏—è. üí¨",
        range: "26-39 –±–∞–ª–ª–æ–≤"
      },
      C: {
        title: "üìö –ü—Ä–æ—Ñ–∏–ª—å C: ¬´–ú–Ω–µ –±—ã –ø–æ–Ω—è—Ç—å –±–∞–∑–æ–≤—ã–µ –æ–∂–∏–¥–∞–Ω–∏—è¬ª",
        description: "ü§∑‚Äç‚ôÄÔ∏è –í–æ–∑–º–æ–∂–Ω–æ, –≤–∞–º –Ω—É–∂–Ω–æ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ –æ–∂–∏–¥–∞–Ω–∏—è—Ö –∏ —Ñ–æ—Ä–º–∞—Ç–µ –º–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä—ã. –ü–æ–¥—É–º–∞–π—Ç–µ, –∫–æ–º—Ñ–æ—Ä—Ç–µ–Ω –ª–∏ –≤–∞–º –ø—Ä–æ–µ–∫—Ç–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∏ –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–∞—è —Ä–∞–±–æ—Ç–∞. üí≠",
        range: "10-25 –±–∞–ª–ª–æ–≤"
      }
    }
  }
};

const CorporateMastersQuiz = () => {
  const [currentQuestion, setCurrentQuestion] = useState(0);
  const [answers, setAnswers] = useState({});
  const [showResult, setShowResult] = useState(false);
  const [language] = useState('ru');
  
  const texts = TEXTS[language];
  const totalQuestions = texts.questions.length;

  const handleAnswerChange = (value) => {
    setAnswers({
      ...answers,
      [currentQuestion]: parseInt(value)
    });
  };

  const goToNext = () => {
    if (currentQuestion < totalQuestions - 1) {
      setCurrentQuestion(currentQuestion + 1);
    } else {
      setShowResult(true);
    }
  };

  const goToPrevious = () => {
    if (currentQuestion > 0) {
      setCurrentQuestion(currentQuestion - 1);
    }
  };

  const calculateResult = () => {
    const totalScore = Object.values(answers).reduce((sum, score) => sum + score, 0);
    
    if (totalScore >= 40) return 'A';
    if (totalScore >= 26) return 'B';
    return 'C';
  };

  const getTotalScore = () => {
    return Object.values(answers).reduce((sum, score) => sum + score, 0);
  };

  const restart = () => {
    setCurrentQuestion(0);
    setAnswers({});
    setShowResult(false);
  };

  const isCurrentQuestionAnswered = () => {
    return answers[currentQuestion] !== undefined;
  };

  if (showResult) {
    const profile = calculateResult();
    const result = texts.results[profile];
    const totalScore = getTotalScore();

    return (
      <div className="min-h-screen bg-gradient-to-br from-blue-50 to-white flex items-center justify-center p-4">
        <div className="bg-white rounded-2xl shadow-xl p-8 max-w-2xl w-full">
          <div className="text-center mb-8">
            <div className="w-20 h-20 bg-blue-500 rounded-full flex items-center justify-center mx-auto mb-4">
              <span className="text-white text-2xl font-bold">{profile}</span>
            </div>
            <h2 className="text-2xl font-bold text-gray-800 mb-2">{result.title}</h2>
            <p className="text-blue-600 font-medium">{result.range}</p>
            <p className="text-lg text-gray-600">–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {totalScore} –±–∞–ª–ª–æ–≤ üìà</p>
          </div>
          
          <div className="bg-blue-50 rounded-xl p-6 mb-8">
            <p className="text-gray-700 leading-relaxed text-center">{result.description}</p>
          </div>
          
          <button
            onClick={restart}
            className="w-full bg-blue-500 hover:bg-blue-600 text-white font-medium py-3 px-6 rounded-xl transition-colors"
          >
            {texts.restartButton}
          </button>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-white flex items-center justify-center p-4">
      <div className="bg-white rounded-2xl shadow-xl p-8 max-w-2xl w-full">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="text-center mb-8">
          <h1 className="text-2xl font-bold text-gray-800 mb-2">{texts.title}</h1>
          <p className="text-gray-600">{texts.subtitle}</p>
          <div className="mt-4">
            <div className="bg-blue-100 rounded-full h-2 mb-2">
              <div 
                className="bg-blue-500 h-2 rounded-full transition-all duration-300"
                style={{ width: `${((currentQuestion + 1) / totalQuestions) * 100}%` }}
              ></div>
            </div>
            <p className="text-sm text-gray-500">
              –í–æ–ø—Ä–æ—Å {currentQuestion + 1} –∏–∑ {totalQuestions} üìù
            </p>
          </div>
        </div>

        {/* –í–æ–ø—Ä–æ—Å */}
        <div className="mb-8">
          <h2 className="text-xl font-medium text-gray-800 mb-6 text-center leading-relaxed">
            {texts.questions[currentQuestion]}
          </h2>
          
          {/* –®–∫–∞–ª–∞ –æ—Ç–≤–µ—Ç–æ–≤ */}
          <div className="space-y-3">
            <p className="text-sm text-gray-600 text-center mb-4">{texts.instruction}</p>
            
            <div className="flex justify-between items-center mb-2 text-xs text-gray-500 px-2">
              <span>{texts.scaleLabels[1]}</span>
              <span>{texts.scaleLabels[5]}</span>
            </div>
            
            <div className="flex justify-between items-center space-x-2">
              {[1, 2, 3, 4, 5].map((value) => (
                <label key={value} className="flex flex-col items-center cursor-pointer flex-1">
                  <input
                    type="radio"
                    name={`question-${currentQuestion}`}
                    value={value}
                    checked={answers[currentQuestion] === value}
                    onChange={(e) => handleAnswerChange(e.target.value)}
                    className="sr-only"
                  />
                  <div className={`
                    w-12 h-12 rounded-full border-2 flex items-center justify-center font-medium transition-all
                    ${answers[currentQuestion] === value 
                      ? 'bg-blue-500 border-blue-500 text-white shadow-md' 
                      : 'border-gray-300 text-gray-600 hover:border-blue-300'
                    }
                  `}>
                    {value}
                  </div>
                </label>
              ))}
            </div>
          </div>
        </div>

        {/* –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ */}
        <div className="flex justify-between items-center">
          <button
            onClick={goToPrevious}
            disabled={currentQuestion === 0}
            className={`
              px-6 py-3 rounded-xl font-medium transition-colors
              ${currentQuestion === 0 
                ? 'bg-gray-100 text-gray-400 cursor-not-allowed' 
                : 'bg-gray-200 text-gray-700 hover:bg-gray-300'
              }
            `}
          >
            {texts.backButton}
          </button>
          
          <button
            onClick={goToNext}
            disabled={!isCurrentQuestionAnswered()}
            className={`
              px-8 py-3 rounded-xl font-medium transition-colors
              ${!isCurrentQuestionAnswered()
                ? 'bg-gray-200 text-gray-400 cursor-not-allowed'
                : 'bg-blue-500 hover:bg-blue-600 text-white shadow-md'
              }
            `}
          >
            {currentQuestion === totalQuestions - 1 ? texts.finishButton : texts.nextButton}
          </button>
        </div>
      </div>
    </div>
  );
};

export default CorporateMastersQuiz;
